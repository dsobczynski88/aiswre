{'eval_has_combinators': {'func': <function eval_has_combinators at 0x0000018258EAA3E0>,
                          'template': ChatPromptTemplate(input_variables=['req'], input_types={}, partial_variables={}, messages=[SystemMessagePromptTemplate(prompt=PromptTemplate(input_variables=[], input_types={}, partial_variables={}, template="Step 1 - The user will hand over an evaluation Criteria and a Requirement. Your task is to revise the Requirement as per the provided Criteria and Examples.\nStep 2 - Compare the initial revision performed in Step 1 against the criteria to determine if any additional revisions are necessary. Let's think step-by-step.\nStep 3 - Return ONLY the final requirement revision based on Steps 1 and 2.\nRules\n---\nThe revised requirement must consist of a single sentence. Additional sentences must be prefixed with Context:."), additional_kwargs={}), HumanMessagePromptTemplate(prompt=PromptTemplate(input_variables=['req'], input_types={}, partial_variables={}, template='Criteria:\n Avoid words that join or combine clauses, such as “and”, “or”, “then”, “unless”, “but”, “as well as” “but also”, “however”, “whether”, “meanwhile”, “whereas”, “on the other hand”, or “otherwise”. \nRequirement:\n{req}'), additional_kwargs={})])},
 'eval_has_escape_clause': {'func': <function eval_has_escape_clause at 0x0000018258EAA200>,
                            'template': ChatPromptTemplate(input_variables=['req'], input_types={}, partial_variables={}, messages=[SystemMessagePromptTemplate(prompt=PromptTemplate(input_variables=[], input_types={}, partial_variables={}, template="Step 1 - The user will hand over an evaluation Criteria and a Requirement. Your task is to revise the Requirement as per the provided Criteria and Examples.\nStep 2 - Compare the initial revision performed in Step 1 against the criteria to determine if any additional revisions are necessary. Let's think step-by-step.\nStep 3 - Return ONLY the final requirement revision based on Steps 1 and 2.\nRules\n---\nThe revised requirement must consist of a single sentence. Additional sentences must be prefixed with Context:."), additional_kwargs={}), HumanMessagePromptTemplate(prompt=PromptTemplate(input_variables=['req'], input_types={}, partial_variables={}, template='Criteria:\n Avoid the inclusion of escape clauses that state vague conditions or possibilities, such as “so far as is possible”, “as little as possible”, “where possible”, “as much as possible”, “if it should prove necessary”, “if necessary”, “to the extent necessary”, “as appropriate”, “as required”, “to the extent practical”, and “if practicable”. \nRequirement:\n{req}'), additional_kwargs={})])},
 'eval_has_open_end_clause': {'func': <function eval_has_open_end_clause at 0x0000018258EAA2A0>,
                              'template': ChatPromptTemplate(input_variables=['req'], input_types={}, partial_variables={}, messages=[SystemMessagePromptTemplate(prompt=PromptTemplate(input_variables=[], input_types={}, partial_variables={}, template="Step 1 - The user will hand over an evaluation Criteria and a Requirement. Your task is to revise the Requirement as per the provided Criteria and Examples.\nStep 2 - Compare the initial revision performed in Step 1 against the criteria to determine if any additional revisions are necessary. Let's think step-by-step.\nStep 3 - Return ONLY the final requirement revision based on Steps 1 and 2.\nRules\n---\nThe revised requirement must consist of a single sentence. Additional sentences must be prefixed with Context:."), additional_kwargs={}), HumanMessagePromptTemplate(prompt=PromptTemplate(input_variables=['req'], input_types={}, partial_variables={}, template='Criteria:\n Avoid open-ended, non-specific clauses such as “including but not limited to”, “etc.” and “and so on”. \nRequirement:\n{req}'), additional_kwargs={})])},
 'eval_has_superfl_inf': {'func': <function eval_has_superfl_inf at 0x0000018258EAA340>,
                          'template': ChatPromptTemplate(input_variables=['req'], input_types={}, partial_variables={}, messages=[SystemMessagePromptTemplate(prompt=PromptTemplate(input_variables=[], input_types={}, partial_variables={}, template="Step 1 - The user will hand over an evaluation Criteria and a Requirement. Your task is to revise the Requirement as per the provided Criteria and Examples.\nStep 2 - Compare the initial revision performed in Step 1 against the criteria to determine if any additional revisions are necessary. Let's think step-by-step.\nStep 3 - Return ONLY the final requirement revision based on Steps 1 and 2.\nRules\n---\nThe revised requirement must consist of a single sentence. Additional sentences must be prefixed with Context:."), additional_kwargs={}), HumanMessagePromptTemplate(prompt=PromptTemplate(input_variables=['req'], input_types={}, partial_variables={}, template='Criteria:\n Avoid the use of superfluous infinitives such as “to be designed to”, “to be able to”, “to be capable of”, “to enable”, “to allow”. \nRequirement:\n{req}'), additional_kwargs={})])},
 'eval_has_vague_terms': {'func': <function eval_has_vague_terms at 0x0000018258EAA160>,
                          'template': ChatPromptTemplate(input_variables=['req'], input_types={}, partial_variables={}, messages=[SystemMessagePromptTemplate(prompt=PromptTemplate(input_variables=[], input_types={}, partial_variables={}, template="Step 1 - The user will hand over an evaluation Criteria and a Requirement. Your task is to revise the Requirement as per the provided Criteria and Examples.\nStep 2 - Compare the initial revision performed in Step 1 against the criteria to determine if any additional revisions are necessary. Let's think step-by-step.\nStep 3 - Return ONLY the final requirement revision based on Steps 1 and 2.\nRules\n---\nThe revised requirement must consist of a single sentence. Additional sentences must be prefixed with Context:."), additional_kwargs={}), HumanMessagePromptTemplate(prompt=PromptTemplate(input_variables=['req'], input_types={}, partial_variables={}, template='Criteria:\n Avoid the use of vague terms. \nRequirement:\n{req}'), additional_kwargs={})])},
 'eval_if_vague_verb': {'func': <function eval_if_vague_verb at 0x0000018258EAA020>,
                        'template': ChatPromptTemplate(input_variables=['req'], input_types={}, partial_variables={}, messages=[SystemMessagePromptTemplate(prompt=PromptTemplate(input_variables=[], input_types={}, partial_variables={}, template="Step 1 - The user will hand over an evaluation Criteria and a Requirement. Your task is to revise the Requirement as per the provided Criteria and Examples.\nStep 2 - Compare the initial revision performed in Step 1 against the criteria to determine if any additional revisions are necessary. Let's think step-by-step.\nStep 3 - Return ONLY the final requirement revision based on Steps 1 and 2.\nRules\n---\nThe revised requirement must consist of a single sentence. Additional sentences must be prefixed with Context:."), additional_kwargs={}), HumanMessagePromptTemplate(prompt=PromptTemplate(input_variables=['req'], input_types={}, partial_variables={}, template='Criteria:\n Ensure the subject and verb of the need or requirement statement are appropriate to the entity to which the statement refers. \nRequirement:\n{req}'), additional_kwargs={})])},
 'eval_is_in_passive_voice': {'func': <function eval_is_in_passive_voice at 0x0000018258EA9F80>,
                              'template': ChatPromptTemplate(input_variables=['req'], input_types={}, partial_variables={}, messages=[SystemMessagePromptTemplate(prompt=PromptTemplate(input_variables=[], input_types={}, partial_variables={}, template="Step 1 - The user will hand over an evaluation Criteria and a Requirement. Your task is to revise the Requirement as per the provided Criteria and Examples.\nStep 2 - Compare the initial revision performed in Step 1 against the criteria to determine if any additional revisions are necessary. Let's think step-by-step.\nStep 3 - Return ONLY the final requirement revision based on Steps 1 and 2.\nRules\n---\nThe revised requirement must consist of a single sentence. Additional sentences must be prefixed with Context:."), additional_kwargs={}), HumanMessagePromptTemplate(prompt=PromptTemplate(input_variables=['req'], input_types={}, partial_variables={}, template='Criteria:\n Use the active voice in the need statement or requirement statement with the responsible entity clearly identified as the subject of the sentence. \nRequirement:\n{req}'), additional_kwargs={})])}}