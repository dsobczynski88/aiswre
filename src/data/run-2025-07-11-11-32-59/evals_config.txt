{'eval_has_combinators': {'func': <function get_logs.<locals>.decorator.<locals>.wrapper at 0x000001AC58ACA8E0>,
                          'template': ChatPromptTemplate(input_variables=['req'], input_types={}, partial_variables={}, messages=[SystemMessagePromptTemplate(prompt=PromptTemplate(input_variables=[], input_types={}, partial_variables={}, template="Step 1 - The user will hand over an evaluation Criteria, Examples of revised requirements, and a Requirement. Your task is to revise the Requirement as per the provided Criteria and Examples.\nStep 2 - Compare the initial revision performed in Step 1 against the criteria to determine if any additional revisions are necessary. Let's think step-by-step.\nStep 3 - Return ONLY the final requirement revision based on Steps 1 and 2.\nRules\n---\nThe revised requirement must consist of a single sentence. Additional sentences must be prefixed with Context:."), additional_kwargs={}), HumanMessagePromptTemplate(prompt=PromptTemplate(input_variables=['req'], input_types={}, partial_variables={}, template='Criteria:\n Avoid words that join or combine clauses, such as “and”, “or”, “then”, “unless”, “but”, “as well as” “but also”, “however”, “whether”, “meanwhile”, “whereas”, “on the other hand”, or “otherwise”. \nExamples:\n Unacceptable: The user shall either be trusted or not trusted.  Improved: The Security_System shall categorize each User as EITHER Trusted OR Not_Trusted. Unacceptable: The <SOI> shall display the Location and Identity of the Lead_Vehicle.  Improved: (Express as two requirements) The <SOI> shall display the Location of the Lead_Vehicle per <Display Standard xyx>. The <SOI> shall display the Identity of the Lead_Vehicle per <Display Standard xyx>. Unacceptable: The <SOI> shall provide an audible or visual alarm having the characteristics defined in <alarm standard xyz>.  Improved: (if the choice is available to the designer) The <SOI> shall provide EITHER an Audible_Alarm OR Visual_Alarm having the characteristics defined in <Alarm Standard xyz>. Improved: (if both alarms are required) Guide to Writing Requirements 89 The <SOI> shall provide an Audible_Alarm having the characteristics defined in <Alarm Standard xyz>. The <SOI> shall provide a Visual_Alarm having the characteristics defined in <Alarm Standard xyz>. [As separate requirements, each can be allocated differently, and the SOI will be verified to meet each. \nRequirement:\n{req}'), additional_kwargs={})])},
 'eval_has_escape_clause': {'func': <function get_logs.<locals>.decorator.<locals>.wrapper at 0x000001AC58ACA520>,
                            'template': ChatPromptTemplate(input_variables=['req'], input_types={}, partial_variables={}, messages=[SystemMessagePromptTemplate(prompt=PromptTemplate(input_variables=[], input_types={}, partial_variables={}, template="Step 1 - The user will hand over an evaluation Criteria, Examples of revised requirements, and a Requirement. Your task is to revise the Requirement as per the provided Criteria and Examples.\nStep 2 - Compare the initial revision performed in Step 1 against the criteria to determine if any additional revisions are necessary. Let's think step-by-step.\nStep 3 - Return ONLY the final requirement revision based on Steps 1 and 2.\nRules\n---\nThe revised requirement must consist of a single sentence. Additional sentences must be prefixed with Context:."), additional_kwargs={}), HumanMessagePromptTemplate(prompt=PromptTemplate(input_variables=['req'], input_types={}, partial_variables={}, template='Criteria:\n Avoid the inclusion of escape clauses that state vague conditions or possibilities, such as “so far as is possible”, “as little as possible”, “where possible”, “as much as possible”, “if it should prove necessary”, “if necessary”, “to the extent necessary”, “as appropriate”, “as required”, “to the extent practical”, and “if practicable”. \nExamples:\n Unacceptable: The GPS shall, where there is sufficient space, display the User_Location in accordance with <Display Standard xyz>.  Improved: The GPS shall display the User_Location in accordance with <Display Standard XYZ>.  4\nRequirement:\n{req}'), additional_kwargs={})])},
 'eval_has_open_end_clause': {'func': <function get_logs.<locals>.decorator.<locals>.wrapper at 0x000001AC58ACA660>,
                              'template': ChatPromptTemplate(input_variables=['req'], input_types={}, partial_variables={}, messages=[SystemMessagePromptTemplate(prompt=PromptTemplate(input_variables=[], input_types={}, partial_variables={}, template="Step 1 - The user will hand over an evaluation Criteria, Examples of revised requirements, and a Requirement. Your task is to revise the Requirement as per the provided Criteria and Examples.\nStep 2 - Compare the initial revision performed in Step 1 against the criteria to determine if any additional revisions are necessary. Let's think step-by-step.\nStep 3 - Return ONLY the final requirement revision based on Steps 1 and 2.\nRules\n---\nThe revised requirement must consist of a single sentence. Additional sentences must be prefixed with Context:."), additional_kwargs={}), HumanMessagePromptTemplate(prompt=PromptTemplate(input_variables=['req'], input_types={}, partial_variables={}, template='Criteria:\n Avoid open-ended, non-specific clauses such as “including but not limited to”, “etc.” and “and so on”. \nExamples:\n Unacceptable: The ATM shall display the Customer Account_Number, Account_Balance, and so on per <Display Standard xyz>.  Guide to Writing Requirements 76 Improved: : The ATM shall display the Customer Account_Number in accordance with <Display Standard xyz>. The ATM shall display the Customer Account_Balance in accordance with <Display Standard xyz>. The ATM shall display the Customer Account_Type in accordance with <Display Standard xyz>. The ATM shall display the Customer Account_Overdraft_Limit in accordance with <Display Standard xyz>.   4.2 Concision 4\nRequirement:\n{req}'), additional_kwargs={})])},
 'eval_has_superfl_inf': {'func': <function get_logs.<locals>.decorator.<locals>.wrapper at 0x000001AC58ACA7A0>,
                          'template': ChatPromptTemplate(input_variables=['req'], input_types={}, partial_variables={}, messages=[SystemMessagePromptTemplate(prompt=PromptTemplate(input_variables=[], input_types={}, partial_variables={}, template="Step 1 - The user will hand over an evaluation Criteria, Examples of revised requirements, and a Requirement. Your task is to revise the Requirement as per the provided Criteria and Examples.\nStep 2 - Compare the initial revision performed in Step 1 against the criteria to determine if any additional revisions are necessary. Let's think step-by-step.\nStep 3 - Return ONLY the final requirement revision based on Steps 1 and 2.\nRules\n---\nThe revised requirement must consist of a single sentence. Additional sentences must be prefixed with Context:."), additional_kwargs={}), HumanMessagePromptTemplate(prompt=PromptTemplate(input_variables=['req'], input_types={}, partial_variables={}, template='Criteria:\n Avoid the use of superfluous infinitives such as “to be designed to”, “to be able to”, “to be capable of”, “to enable”, “to allow”. \nExamples:\n Unacceptable: The Weapon_System shall be able to store the location of each Ordnance.  Improved: When <condition>he Weapon_System shall store the Location of each Ordnance.  4\nRequirement:\n{req}'), additional_kwargs={})])},
 'eval_has_vague_terms': {'func': <function get_logs.<locals>.decorator.<locals>.wrapper at 0x000001AC58ACA3E0>,
                          'template': ChatPromptTemplate(input_variables=['req'], input_types={}, partial_variables={}, messages=[SystemMessagePromptTemplate(prompt=PromptTemplate(input_variables=[], input_types={}, partial_variables={}, template="Step 1 - The user will hand over an evaluation Criteria, Examples of revised requirements, and a Requirement. Your task is to revise the Requirement as per the provided Criteria and Examples.\nStep 2 - Compare the initial revision performed in Step 1 against the criteria to determine if any additional revisions are necessary. Let's think step-by-step.\nStep 3 - Return ONLY the final requirement revision based on Steps 1 and 2.\nRules\n---\nThe revised requirement must consist of a single sentence. Additional sentences must be prefixed with Context:."), additional_kwargs={}), HumanMessagePromptTemplate(prompt=PromptTemplate(input_variables=['req'], input_types={}, partial_variables={}, template='Criteria:\n Avoid the use of vague terms. \nExamples:\n Unacceptable: The <SOI> shall usually be online.  Improved: The <SOI> shall have an Availability of greater than xx% over a period of greater than yyyy hours.  Unacceptable: The Flight_Information_System shall display per <Display Standard xyz> the Tracking_Information for relevant aircraft within <xxxx seconds> of detection.  Improved: The Flight_Information_System shall display per <Display Standard xyz> the Tracking_Information of each Aircraft located less than or equal to 20 kilometers from the Airfield when in the Operations_Mode within <xxxx seconds> of detection.  \nRequirement:\n{req}'), additional_kwargs={})])},
 'eval_if_vague_verb': {'func': <function get_logs.<locals>.decorator.<locals>.wrapper at 0x000001AC58ACA160>,
                        'template': ChatPromptTemplate(input_variables=['req'], input_types={}, partial_variables={}, messages=[SystemMessagePromptTemplate(prompt=PromptTemplate(input_variables=[], input_types={}, partial_variables={}, template="Step 1 - The user will hand over an evaluation Criteria, Examples of revised requirements, and a Requirement. Your task is to revise the Requirement as per the provided Criteria and Examples.\nStep 2 - Compare the initial revision performed in Step 1 against the criteria to determine if any additional revisions are necessary. Let's think step-by-step.\nStep 3 - Return ONLY the final requirement revision based on Steps 1 and 2.\nRules\n---\nThe revised requirement must consist of a single sentence. Additional sentences must be prefixed with Context:."), additional_kwargs={}), HumanMessagePromptTemplate(prompt=PromptTemplate(input_variables=['req'], input_types={}, partial_variables={}, template='Criteria:\n Ensure the subject and verb of the need or requirement statement are appropriate to the entity to which the statement refers. \nExamples:\n Subject examples: Business management requirements have the form “The <business> shall …”. For example, “ACME_Transport shall …”. Business operations requirements on business elements have the form “The <business element> shall …”. For example, requirements on personnel roles have the form: “The <personnel role> shall …”—such as, “The Production_Manager shall …”; “The Marketing_Manager shall …”. System level needs have the form “The <stakeholders> need the system to ……” System requirements have the form "The <SOI> shall ..."—for example, “The Aircraft shall …” Subsystem level needs have the form “The <stakeholders> need the <subsystem> to ……” Subsystem requirements have the form “The <subsystem> shall …" - for example, once the subsystems are defined: “The Engine shall …”; and “The Landing_Gear shall …”. Verb examples: System level stakeholder need: “The <stakeholders> need the <SOI> to process data received from <other system>.” System level requirement: “The <SOI> shall  data received from <another system>. having the characteristics defined in <Interface Definition XYZ.>” Through analysis, the verb/function “process” could be decomposed into sub functions such as “receive”, “store”, “calculate”, “report”, and “display”. Then a decision needs to be made regarding the specific subsystem or system element in which these sub functions are to be performed. If more than one subsystem or system element has a role in performing any one of the sub functions, that requirement should be communicated at the system level and allocated to the applicable subsystems or system elements. If a sub function is to be implemented by a single subsystem or system element, then the sub function requirement should be communicated at the subsystem or system element set of requirements and traced back to the higher-level requirement from which it was decomposed. Unacceptable system requirement: “The User shall ...”  Improved: “The <SOI> shall …”. Unacceptable: The <SOI> shall display the Current_Time on the <Display Device> per <Display Standard xyz>.  Improved: The <SOI> shall display the Current_Time per <Display Standard xyz>.  4\nRequirement:\n{req}'), additional_kwargs={})])},
 'eval_is_in_passive_voice': {'func': <function get_logs.<locals>.decorator.<locals>.wrapper at 0x000001AC58ACA020>,
                              'template': ChatPromptTemplate(input_variables=['req'], input_types={}, partial_variables={}, messages=[SystemMessagePromptTemplate(prompt=PromptTemplate(input_variables=[], input_types={}, partial_variables={}, template="Step 1 - The user will hand over an evaluation Criteria, Examples of revised requirements, and a Requirement. Your task is to revise the Requirement as per the provided Criteria and Examples.\nStep 2 - Compare the initial revision performed in Step 1 against the criteria to determine if any additional revisions are necessary. Let's think step-by-step.\nStep 3 - Return ONLY the final requirement revision based on Steps 1 and 2.\nRules\n---\nThe revised requirement must consist of a single sentence. Additional sentences must be prefixed with Context:."), additional_kwargs={}), HumanMessagePromptTemplate(prompt=PromptTemplate(input_variables=['req'], input_types={}, partial_variables={}, template='Criteria:\n Use the active voice in the need statement or requirement statement with the responsible entity clearly identified as the subject of the sentence. \nExamples:\n Unacceptable: The Identity of the Customer shall be confirmed.  Improved by adding the subject: The Identity of the Customer shall be confirmed by the Accounting_System.  Improved: The Accounting_System shall confirm the Customer_Identity. Guide to Writing Requirements 66  Unacceptable: While in the Operations_Mode, the Audio having the characteristics defined in <ICD xxxx> shall be recorded.  Improved by adding the subject: While in the Operations_Mode, the Audio having the characteristics defined in <ICD xxxx> shall be recorded by the <SOI>.  Improved: While in the Operations_Mode, the <SOI> shall record Audio having the characteristics defined in <ICD xxxx>.  4\nRequirement:\n{req}'), additional_kwargs={})])}}